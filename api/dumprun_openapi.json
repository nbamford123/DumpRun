{
  "openapi": "3.0.0",
  "info": {
    "title": "Dump Pickup API",
    "version": "1.0.0",
    "description": "API for managing dump pickup requests, user accounts, and driver operations."
  },
  "servers": [
    {
      "url": "https://api.dumppickup.com/v1"
    }
  ],
  "paths": {
    "/v1/users": {
      "post": {
        "summary": "Create a new user account",
        "operationId": "createUser",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      },
      "get": {
        "summary": "List all users",
        "operationId": "listUsers",
        "tags": ["Users"],
        "security": [
          {
            "CognitoAuth": ["admin"]
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "total": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/users/{userId}": {
      "get": {
        "summary": "Get a user by ID",
        "operationId": "getUser",
        "tags": ["Users"],
        "security": [
          {
            "CognitoAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "Update a user",
        "operationId": "updateUser",
        "tags": ["Users"],
        "security": [
          {
            "CognitoAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "operationId": "deleteUser",
        "tags": ["Users"],
        "security": [
          {
            "CognitoAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/drivers": {
      "post": {
        "summary": "Create a new driver account",
        "operationId": "createDriver",
        "tags": ["Drivers"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewDriver"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Driver created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Driver"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      },
      "get": {
        "summary": "List all drivers",
        "operationId": "listDrivers",
        "tags": ["Drivers"],
        "security": [
          {
            "CognitoAuth": ["admin"]
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of drivers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Driver"
                      }
                    },
                    "total": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/v1/drivers/{driverId}": {
      "get": {
        "summary": "Get a driver by ID",
        "operationId": "getDriver",
        "tags": ["Driver"],
        "security": [
          {
            "CognitoAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "driverId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Driver details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Driver"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "Update a driver",
        "operationId": "updateDriver",
        "tags": ["Drivers"],
        "security": [
          {
            "CognitoAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "driverId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDriver"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Driver updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Driver"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Delete a driver",
        "operationId": "deleteDriver",
        "tags": ["Drivers"],
        "security": [
          {
            "CognitoAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "driverId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Driver deleted successfully"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/pickups": {
      "post": {
        "summary": "Create a new pickup request",
        "operationId": "createPickup",
        "tags": ["Pickups"],
        "security": [
          {
            "cognitoAuth": ["openid"]
          }
        ],
        "x-amazon-apigateway-auth": {
          "type": "cognito_user_pools"
        },
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:region:lambda:path/2015-03-31/functions/arn:aws:lambda:region:account-id:function:create-pickup/invocations",
          "passthroughBehavior": "when_no_match",
          "httpMethod": "POST"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPickup"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pickup request created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pickup"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "get": {
        "summary": "List pickup requests",
        "operationId": "listPickups",
        "tags": ["Pickups"],
        "security": [
          {
            "CognitoAuth": ["admin"]
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": ["pending", "assigned", "completed", "in_progress", "cancelled", "deleted"]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of pickup requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pickups": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Pickup"
                      }
                    },
                    "nextCursor": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/v1/pickups/{pickupId}": {
      "get": {
        "summary": "Get a pickup by ID",
        "operationId": "getPickup",
        "tags": ["Pickups"],
        "security": [
          {
            "CognitoAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "pickupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "includeDeleted",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include deleted pickups"
          }
        ],
        "responses": {
          "200": {
            "description": "Pickup details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pickup"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "Update a pickup",
        "operationId": "updatePickup",
        "tags": ["Pickups"],
        "security": [
          {
            "CognitoAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "pickupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePickup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pickup updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pickup"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Delete a pickup",
        "operationId": "deletePickup",
        "tags": ["Pickups"],
        "security": [
          {
            "CognitoAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "pickupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Pickup deleted successfully"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/v1/pickups/available": {
      "get": {
        "summary": "List available pickups for drivers",
        "operationId": "listAvailablePickups",
        "tags": ["Pickups"],
        "security": [
          {
            "CognitoAuth": ["driver"]
          }
        ],
        "responses": {
          "200": {
            "description": "List of available pickup requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pickup"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/pickups/{pickupId}/accept": {
      "post": {
        "summary": "Accept a pickup request",
        "operationId": "acceptPickup",
        "tags": ["Pickups"],
        "security": [
          {
            "CognitoAuth": ["driver"]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "pickupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pickup request accepted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pickup"
                }
              }
            }
          }
        }
      }
    },
    "/v1/pickups/{pickupId}/cancel-acceptance": {
      "post": {
        "summary": "Cancel acceptance of a pickup",
        "operationId": "cancelAcceptance",
        "tags": ["Pickups"],
        "security": [
          {
            "CognitoAuth": ["driver"]
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "pickupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Acceptance cancelled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pickup"
                }
              }
            }
          },
          "404": {
            "description": "Pickup not found or not currently accepted"
          },
          "403": {
            "description": "Not authorized to cancel this acceptance"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "CognitoAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "x-amazon-apigateway-authtype": "cognito_user_pools",
        "x-amazon-apigateway-authorizer": {
          "type": "cognito_user_pools",
          "providerARNs": [
            "arn:aws:cognito-idp:us-west-2:369547265320:userpool/us-west-2_vriluhdDN"
          ]
        }
      }
    },
    "schemas": {
      "NewUser": {
        "type": "object",
        "required": ["name", "email", "password", "phone", "address"],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password",
            "minLength": 8
          },
          "phone": {
            "type": "string",
            "pattern": "^\\+?[1-9]\\d{1,14}$|^\\d{3}-\\d{3}-\\d{4}$"
          },
          "address": {
            "type": "string"
          }
        }
      },
      "UpdateUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "password": {
            "type": "string",
            "format": "password",
            "minLength": 8
          },
          "phone": {
            "type": "string",
            "pattern": "^\\+?[1-9]\\d{1,14}$|^\\d{3}-\\d{3}-\\d{4}$"
          },
          "address": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "NewDriver": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password",
          "phone",
          "address",
          "vehicleMake",
          "vehicleModel",
          "vehicleYear"
        ],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password",
            "minLength": 8
          },
          "phone": {
            "type": "string",
            "pattern": "^\\+?[1-9]\\d{1,14}$|^\\d{3}-\\d{3}-\\d{4}$"
          },
          "address": {
            "type": "string"
          },
          "vehicleMake": {
            "type": "string"
          },
          "vehicleModel": {
            "type": "string"
          },
          "vehicleYear": {
            "type": "number"
          }
        }
      },
      "UpdateDriver": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "password": {
            "type": "string",
            "format": "password",
            "minLength": 8
          },
          "phone": {
            "type": "string",
            "pattern": "^\\+?[1-9]\\d{1,14}$|^\\d{3}-\\d{3}-\\d{4}$"
          },
          "address": {
            "type": "string"
          },
          "vehicleMake": {
            "type": "string"
          },
          "vehicleModel": {
            "type": "string"
          },
          "vehicleYear": {
            "type": "number"
          }
        }
      },
      "Driver": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "vehicleMake": {
            "type": "string"
          },
          "vehicleModel": {
            "type": "string"
          },
          "vehicleYear": {
            "type": "number"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "NewPickup": {
        "type": "object",
        "required": [
          "location",
          "estimatedWeight",
          "requestedTime",
          "wasteType"
        ],
        "properties": {
          "location": {
            "type": "string"
          },
          "estimatedWeight": {
            "type": "number",
            "format": "float"
          },
          "wasteType": {
            "type": "string"
          },
          "requestedTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UpdatePickup": {
        "type": "object",
        "properties": {
          "location": {
            "type": "string"
          },
          "estimatedWeight": {
            "type": "number",
            "format": "float",
            "minimum": 1
          },
          "wasteType": {
            "type": "string",
            "enum": ["household", "construction", "green", "electronic"]
          },
          "requestedTime": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "available",
              "accepted",
              "in_progress",
              "completed",
              "cancelled",
              "deleted"
            ]
          }
        },
        "additionalProperties": false
      },
      "Pickup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "driverId": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "available",
              "accepted",
              "in_progress",
              "completed",
              "cancelled",
              "deleted"
            ]
          },
          "location": {
            "type": "string"
          },
          "estimatedWeight": {
            "type": "number",
            "format": "float",
            "minimum": 1
          },
          "wasteType": {
            "type": "string",
            "enum": ["household", "construction", "green", "electronic"]
          },
          "requestedTime": {
            "type": "string",
            "format": "date-time"
          },
          "assignedTime": {
            "type": "string",
            "format": "date-time"
          },
          "completedTime": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Access forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  }
}
